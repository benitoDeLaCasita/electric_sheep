# Local working directory
if File.basename(Dir.pwd)=='tmp'
  # Cucumber features
  working_directory File.expand_path('./')
  ssh_key=File.join('../', 'acceptance', 'id_rsa')
  dummy= File.expand_path('dummy.file')
  dummy_directory= File.expand_path('dummy-directory')
else
  # Manual run
  working_directory File.expand_path("tmp")
  ssh_key='./acceptance/id_rsa'
  dummy= File.expand_path('tmp/dummy.file')
  dummy_directory= File.expand_path('tmp/dummy-directory')
end

host "main-host", hostname: "127.0.0.1",
  ssh_port: 2222,
  working_directory: "/tmp/acceptance"

host "backup-store", hostname: "127.0.0.1",
  ssh_port: 2222,
  working_directory: "/tmp/acceptance_backup" #optional

###############################################################################
## SCP
  job "scp-move-local-to-remote", private_key: ssh_key do
  resource "file", path: dummy
  move to: "main-host", using: "scp", as: "vagrant"
end

job "scp-fail", private_key: ssh_key do
  resource "file", path: 'tmp/fail.file'
  move to: "main-host", using: "scp", as: "vagrant"
end

job "scp-copy-local-to-remote", private_key: ssh_key do
  resource "file", path: dummy
  copy to: "main-host", using: "scp", as: "vagrant"
end

job "scp-copy-remote-to-local", private_key: ssh_key do
  resource "file", path: "dummy.file", host: "main-host"
  copy to: "localhost", using: "scp", as: "vagrant"
end

job "scp-move-remote-to-local", private_key: ssh_key do
  resource "file", path: "dummy.file", host: "main-host"
  move to: "localhost", using: "scp", as: "vagrant"
end

job "scp-copy-and-move", private_key: ssh_key do
  resource "file", path: dummy
  copy to: "main-host", using: "scp", as: "vagrant"
  move to: "backup-store", using: "scp", as: "vagrant"
end

job "scp-move-directory-local-to-remote", private_key: ssh_key do
  resource "directory", path: dummy_directory
  move to: "main-host", using: "scp", as: "vagrant"
end

job "scp-copy-directory-local-to-remote", private_key: ssh_key do
  resource "directory", path: dummy_directory
  copy to: "main-host", using: "scp", as: "vagrant"
end

job "scp-move-directory-remote-to-local", private_key: ssh_key do
  resource "directory", path: "dummy-directory", host: "main-host"
  move to: "localhost", using: "scp", as: "vagrant"
end

job "scp-copy-directory-remote-to-local", private_key: ssh_key do
  resource "directory", path: "dummy-directory", host: "main-host"
  copy to: "localhost", using: "scp", as: "vagrant"
end

###############################################################################
## S3
job "s3-move-local-to-remote" do
  resource "file", path: dummy
  move to: "my-bucket/my-job", using: "s3"
end

job "s3-copy-local-to-remote" do
  resource "file", path: dummy
  copy to: "my-bucket/my-job", using: "s3"
end

job "s3-move-remote-to-local" do
  resource "s3_object", bucket: "my-bucket", path: "my-job/dummy.file"
  move to: "localhost", using: "s3"
end

job "s3-copy-remote-to-local" do
  resource "s3_object", bucket: "my-bucket", path: "my-job/dummy.file"
  copy to: "localhost", using: "s3"
end

job "s3-fail" do
  resource "file", path: dummy
  move to: "my-bucket/my-job", using: "s3"
end

###############################################################################
## TarGz
job "tar-gz-file", private_key: ssh_key do
  resource "file", path: "dummy.file", host: "main-host"
  remotely as: "vagrant" do
    tar_gz
  end
end

job "tar-gz-directory", private_key: ssh_key do
  resource "file", path: "dummy-directory", host: "main-host"
  remotely as: "vagrant" do
    tar_gz
  end
end

job "tar-gz-unknown-file", private_key: ssh_key do
  resource "file", path: "unknown-file", host: "main-host"
  remotely as: "vagrant" do
    tar_gz
  end
end

###############################################################################
## MongoDB Dump
job "mongodb-dump", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"

  remotely as: "vagrant" do
    mongodb_dump
  end
  move to: "localhost", using: "scp", as: "vagrant"
end

job "mongodb-dump-auth-fail", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"
  remotely as: "vagrant" do
    mongodb_dump user: "fail_user", password: "incorrect"
  end
end

job "mongodb-dump-unknown-db-fail", private_key: ssh_key do
  resource "database", name: "unknown", host: "main-host"
  remotely as: "vagrant" do
    mongodb_dump
  end
end

###############################################################################
## MySQL Dump
job "mysql-dump", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"
  remotely as: "vagrant" do
    mysql_dump user: "operator", password: "pseudorandom"
  end
  move to: "localhost", using: "scp", as: "vagrant"
end

job "mysql-dump-unknown-db-fail", private_key: ssh_key do
  resource "database", name: "unknown", host: "main-host"
  remotely as: "vagrant" do
    mysql_dump user: "operator", password: "pseudorandom"
  end
end

job "mysql-dump-auth-fail", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"
  remotely as: "vagrant" do
    mysql_dump user: "fail_user", password: "incorrect"
  end
end

###############################################################################
## PostgreSQL Dump
job "postgresql-dump", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"
  remotely as: "vagrant" do
    postgresql_dump user: "operator", password: "pseudorandom", login_host: "localhost"
  end
  move to: "localhost", using: "scp", as: "vagrant"
end

job "postgresql-dump-sudo", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"
  remotely as: "vagrant" do
    postgresql_dump sudo_as: "postgres"
  end
  move to: "localhost", using: "scp", as: "vagrant"
end

job "postgresql-dump-unknown-db-fail", private_key: ssh_key do
  resource "database", name: "unknown", host: "main-host"
  remotely as: "vagrant" do
    postgresql_dump user: "operator", password: "pseudorandom", login_host: "localhost"
  end
end

job "postgresql-dump-auth-fail", private_key: ssh_key do
  resource "database", name: "controldb", host: "main-host"
  remotely as: "vagrant" do
    postgresql_dump user: "fail_user", password: "incorrect", login_host: "localhost"
  end
end
